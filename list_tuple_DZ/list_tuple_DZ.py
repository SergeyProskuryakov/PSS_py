# 1. Выяснить, какие номера символов не совпадают в двух введенных строках (вернуть список)
# 2. Выяснить, сколько символов второй строки встречается в первой
# 3. Создать случайную строку заданной длины из неповторяющихся символов
# 4. Запросить пользователя строку. Проверить её на соответствие "алфавиту" (самое простое - цифры)
# 5. Красиво оформить игру по алгоритму:
#   5.1. сгенерить строку
#   5.2. в цикле: спросить попытку, проверить и выдать диагностику


# БЫКИ И КОРОВЫ
# Загадывается последовательность (ЧИСЛО) из n-символов
# Игрок высказывает предположение
# И получает диагностику: 
    # быки - символы, стоящие на своих местах,
    # коровы - символы, присутствующие, но не на своём месте
# Подсчитывается количество попыток
# Предлагается новая игра
# Важно: грамотная запись - 1 бык, 3 быка, 11 быков
# Упрощение: угадать 4-х значное число, сравнивая на равенство

import random

### Функция загадывания числа из НЕповторяющихся цифр ###
def create_number_func(nums='0123456789', nums_len=4):
    result = ''.join(random.sample(nums, nums_len))             # TODO: сделать при помощи random.randint(), НЕповторяющиеся цифры
    return result

def sum_bulls_func(bulls_number, bulls_trying):




def main_func(len_number):
    number = create_number_func(nums_len=len_number)
    print(number)
    sum_trying = 0
    trying = '0'
    while trying != number:
        sum_trying += 1
        trying = input('Введите 4-х значное число: ')
        if not trying.isdigit():
            print('Играем только числами!')
    return sum_trying

len_number = 4
answer = 'да'

while answer == 'да' or answer == 'lf' or answer == 'da' or answer == 'вф':
    print('Угадал за ', main_func(len_number), ' попыток')
    answer = input('Сыграем ещё раз? ')

print('Спасибо за игру! В следующий раз победю я...')

# TODO: не понял с параметрами 